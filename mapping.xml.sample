<meta>
    <settings>
        <freshservice
                url="{url}.freshservice.com"
                api_key="{api_key}"/>
        <device42
                url="https://{url}"
                user="{user}"
                pass="{pass}"/>
    </settings>

<tasks>
        <task enable="true" description="Copy Servers from Device42 to FreshService using DOQL">
            <api>
                <target model="assets" target="freshservice" method="POST" update_method="PUT" path="api/v2/assets"
                        asset-type="Server"/>
                <resource model="Devices" target="device42" method="POST"
                          path="services/data/v1.0/query/"
                          doql="select view_device_v1.*, t_cost.cost, view_vendor_v1.name as manufacturer, case WHEN view_device_v1.type = 'Virtual' THEN view_device_v1.type WHEN view_device_v1.type = 'Cluster' THEN view_device_v1.type ELSE coalesce(view_hardware_v1.name, view_device_v1.type) END as hw_model, case WHEN view_device_v1.hz = 'MHz' and view_device_v1.cpupower is not null  THEN view_device_v1.cpupower / 1000 ELSE view_device_v1.cpupower END as cpuspeed, case WHEN view_device_v1.ram_size_type = 'MB' and view_device_v1.ram is not null  THEN view_device_v1.ram / 1024 WHEN view_device_v1.ram_size_type = 'TB' and view_device_v1.ram is not null  THEN view_device_v1.ram * 1024 ELSE view_device_v1.ram END as ramsize, network.ip_address, network.hwaddress :: macaddr from view_device_v1 left join view_hardware_v1 on view_device_v1.hardware_fk = view_hardware_v1.hardware_pk left join  (select view_ipaddress_v1.device_fk,  max(view_ipaddress_v1.ip_address) as ip_address,  max(view_netport_v1.hwaddress) as hwaddress from view_ipaddress_v1 left join view_netport_v1 on view_ipaddress_v1.netport_fk = view_netport_v1.netport_pk where view_netport_v1.hwaddress is null or (view_netport_v1.hwaddress is not null and LENGTH(view_netport_v1.hwaddress)=12) group by view_ipaddress_v1.device_fk) network on view_device_v1.device_pk=network.device_fk left join (select device_fk, sum(cost) as cost from view_purchaselineitem_v1 left join view_purchaselineitems_to_devices_v1 on purchaselineitem_fk = purchaselineitem_pk group by device_fk) t_cost on t_cost.device_fk=device_pk left join view_vendor_v1 on vendor_pk=vendor_fk "
                        />
            </api>

            <mapping callback="from_d42" key="name" source="Devices">
                <field resource="in_service" source-type="boolean" target="asset_state" target-type="string"
                       target-header="Hardware">
                    <value-mapping default="Missing">
                        <item key="true" value="In Use"/>
                    </value-mapping>
                </field>
                <field resource="asset_no" source-type="string" target="asset_tag" target-type="string"
                       target-header="General"/>
                <field resource="name" source-type="string" target="name" target-type="string" target-header="General"/>
                <field resource="type" source-type="string" target="asset_type_id" target-type="string"
                       target-header="General"
                       target-foregin="asset_types" target-foregin-key="name" target-field="asset_type_id">
                    <value-mapping default="Server">
                        <item key="Physical" value="Server"/>
                        <item key="Virtual" value="Server"/>
                        <item key="Blade" value="Server"/>
                        <item key="Cluster" value="Server"/>
                        <item key="Unknown" value="Server"/>
                        <item key="Other" value="Server"/>
                    </value-mapping>
                </field>
                <field resource="notes" source-type="string" target="description" target-header="General"/>
                <field resource="uuid" type="string" target="uuid"
                       target-header="Computer" not-null="true" set-space="true"
                       min-length="1" max-length="255"/>
                <field resource="cost" type="float" target="cost"
                       target-header="Cost" not-null="true" set-zero="true"/>
                <field resource="ip_address" type="string" target="computer_ip_address"
                       target-header="Computer" not-null="true" />
                <field resource="hwaddress" type="string" target="mac_address"
                       target-header="Computer" not-null="true"/>
                <field resource="os_name" source-type="string" target="os" target-type="string"
                       target-header="Computer" not-null="true">
                    <!-- alt OS names must lower case and delimited by a comma and a single space character -->
                    <value-mapping>
                        <item key="linux, ubuntu, centos, redhat, oracle, freebsd, suse, debian, fedora, opensuse" value="Linux"/>
                        <item key="windows, microsoft" value="Windows"/>
                        <item key="mac, os x, macos, ios" value="Mac"/>
                        <item key="solaris" value="Solaris"/>
                        <item key="aix" value="Aix"/>
                    </value-mapping>
                </field>

                <field resource="os_name" source-type="string" target="os_version" target-type="string" target-header="Computer" not-null="true"/>

                <field resource="cpuspeed" source-type="float" target="cpu_speed" target-type="float"
                       target-header="Computer" not-null="true"/>
                <field resource="cpucore" source-type="integer" target="cpu_core_count" target-type="integer"
                       not-null="true"
                       target-header="Computer"/>
                <field resource="hw_model" source-type="string" target="product" target-type="string"
                       target-header="Hardware"
                       target-foregin="products" target-foregin-key="name" not-null="true" required="True"/>
                <field resource="serial_no" source-type="string" target="serial_number" target-type="string"
                       target-header="Hardware"
                       min-length="1" max-length="255"/>
                <field resource="ramsize" source-type="float" target="memory" target-type="float"
                       target-header="Computer" not-null="true" />
            </mapping>
        </task>

        <task enable="false" description="Delete Servers from FreshService">
            <api>
                <target model="assets" target="freshservice" method="POST" update_method="PUT" path="api/v2/assets"
                        asset-type="Server" delete="true"/>
                <resource model="Devices" target="device42" method="GET" extra-filter="last_updated_gt=2016-09-04 00:00"
                          path="api/1.0/devices/all/?"/>
            </api>
            <mapping callback="from_d42" key="name" source="Devices"/>
        </task>

        <task enable="false" type="affinity_group" description="Create Relationship from Affinity Groups">
            <api>
                <target model="assets" target="freshservice" method="POST" path="cmdb/items/{id}/associate.json"/>
                <resource model="Devices" target="device42" method="POST"
                          path="services/data/v1.0/query/"
                          doql="select dependent_device_fk, dependent_device_name, dependency_device_fk, dependency_device_name from view_deviceaffinity_v2 df1 where dependent_device_fk is not null and dependent_device_fk &lt;&gt; dependency_device_fk and effective_to is null"
                        />
            </api>
            <mapping callback="from_d42" key="dependent_device_name" forward-relationship="Depends On" backward-relationship="Used By" type="config_items" target-key="dependency_device_name">
            </mapping>
        </task>

        <task enable="false" type="affinity_group" description="Delete Relationship from Affinity Groups">
            <api>
                <target model="assets" target="freshservice" method="POST" path="cmdb/items/{id}/associate.json"
                        delete="true"/>
                <resource model="Devices" target="device42" method="POST"
                          path="services/data/v1.0/query/"
                          doql="select distinct df1.dependent_device_fk, df1.dependent_device_name, df1.dependency_device_fk, df1.dependency_device_name from view_deviceaffinity_v2 df1 left outer join view_deviceaffinity_v2 df2 on df2.dependent_device_fk = df1.dependent_device_fk and df1.dependency_device_fk = df2.dependency_device_fk and df2.effective_to is null where df1.effective_to is not null and df1.dependent_device_fk is not null and df2.deviceaffinity_pk is null"
                        />
            </api>
            <mapping callback="from_d42" key="dependent_device_name" forward-relationship="Depends On" backward-relationship="Used By" type="config_items" target-key="dependency_device_name">
            </mapping>
        </task>

        <task enable="false" type="business_app" description="Create Relationship from Business Apps">
            <api>
                <target model="assets" target="freshservice" method="POST" path="cmdb/items/{id}/associate.json"/>
                <resource model="Devices" target="device42" method="POST"
                          path="services/data/v1.0/query/"
                          doql="select case connection_type when 'reversed' then  be2.device_fk else be1.device_fk end as dependent_device_fk, case connection_type when 'reversed' then  be2.element_name else be1.element_name end as dependent_device_name,        case connection_type when 'reversed' then  be1.device_fk else be2.device_fk end as dependency_device_fk,        case connection_type when 'reversed' then  be1.element_name else be2.element_name end as dependency_device_name from view_businessapplicationconnection_v1 bc join view_businessapplicationelement_v1 be1 on bc.from_businessapplicationelement_fk = be1.businessapplicationelement_pk join view_businessapplicationelement_v1 be2 on bc.to_businessapplicationelement_fk = be2.businessapplicationelement_pk"
                        />
            </api>
            <mapping callback="from_d42" key="dependent_device_name" forward-relationship="Send Data to" backward-relationship="Received Data from" type="config_items" target-key="dependency_device_name">
            </mapping>
        </task>

        <task enable="false" type="business_app" description="Delete Relationship from Business Apps">
            <api>
                <target model="assets" target="freshservice" method="POST" path="cmdb/items/{id}/associate.json" delete="true"/>
                <resource model="Devices" target="device42" method="POST"
                          path="services/data/v1.0/query/"
                          doql="select case connection_type when 'reversed' then  be2.device_fk else be1.device_fk end as dependent_device_fk, case connection_type when 'reversed' then  be2.element_name else be1.element_name end as dependent_device_name,        case connection_type when 'reversed' then  be1.device_fk else be2.device_fk end as dependency_device_fk,        case connection_type when 'reversed' then  be1.element_name else be2.element_name end as dependency_device_name from view_businessapplicationconnection_v1 bc join view_businessapplicationelement_v1 be1 on bc.from_businessapplicationelement_fk = be1.businessapplicationelement_pk join view_businessapplicationelement_v1 be2 on bc.to_businessapplicationelement_fk = be2.businessapplicationelement_pk"
                        />
            </api>
            <mapping callback="from_d42" key="dependent_device_name" forward-relationship="Send Data to" backward-relationship="Received Data from" type="config_items" target-key="dependency_device_name">
            </mapping>
        </task>
    </tasks>
</meta>